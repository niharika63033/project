CHATBOT CREATION

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sentiment Analysis</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #6a11cb, #2575fc); /* Beautiful gradient background */
            color: #fff;
            margin: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            overflow: hidden;
        }h1 {
            font-size: 4em;
            font-weight: bold;
            letter-spacing: 2px;
            text-transform: uppercase;
            color: #fff;
            background: -webkit-linear-gradient(45deg, #ff6f61, #11cbb5);
            display: inline-block;
            margin: 0;
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);
        }.container {
            text-align: center;
            padding: 20px;
            background-color: rgba(0, 0, 0, 0.4);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.6);
            position: relative;
            z-index: 2;
            width: 60%;
            margin: auto;
        } .subtitle {
            font-size: 1.5em;
            color: #f0f0f0;
            margin-top: 20px;
            font-style: italic;
            letter-spacing: 1px;
        }  .button {
            display: inline-block;
            padding: 12px 30px;
            background-color: #ff6f61;
            color: #fff;
            font-size: 1.2em;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 30px;
            transition: background-color 0.3s;
        } .button:hover {
            background-color: #ff4c39;
        }
@keyframes moveUpDown {
            0% {
                transform: translateY(-50%);
            }
            50% {
                transform: translateY(-60%);
            }
            100% {
                transform: translateY(-50%);
            }
        }.left-image {
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 25%;
            z-index: 1;
            animation: moveUpDown 2s ease-in-out infinite; /* Adding the animation */
        }
.right-image {
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 25%;
            z-index: 1;
            animation: moveUpDown 2s ease-in-out infinite, handWave 1s ease-in-out infinite; /* Adding the animation */
        }@keyframes handWave {
            0% {
                transform: rotate(0deg);
            }
            25% {
                transform: rotate(15deg);
            }
            50% {
                transform: rotate(0deg);
            }
            75% {
                transform: rotate(-15deg);
            }
            100% {
                transform: rotate(0deg);
            }
        }
.right-image {
            animation: moveUpDown 2s ease-in-out infinite, handWave 1s ease-in-out infinite; /* Combine animations */
        }
.left-image-cc5 {
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 25%;
            z-index: 1;
            animation: moveUpDown 2s ease-in-out infinite, handWave 1s ease-in-out infinite; /* Apply the same animation */
        }</style>
</head>
<body>
    <!-- Side images -->
    <img src="cc3---.png" alt="Left Image" class="left-image">
    <img src="cc2--.png" alt="Right Image" class="right-image">
   
    <div class="container">
        <h1>Sentiment Analysis</h1>
        <p class="subtitle">Analyze your feelings with just a few words!</p>
        <a href="frontpage.html" class="button">Start Analyzing</a>
    </div>
</body>
</html>
Program:
Code:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Chatbot with Voice and Sentiment Analysis</title>
    <style>
        body {
            font-family: 'Helvetica', sans-serif;
            background-color: #1c1c1c; 
            color: #FFFFFF;
            margin: 0;
            padding: 0;
            height: 100vh; 
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        } .chat-container {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: center;
            width: 100%; 
            height: 100%; 
            max-width: 800px; 
            background-color: #a6f8f0; 
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            border-radius: 10px;
        }.chat-window {
            flex-grow: 1;
            width: 100%;
            overflow-y: auto; 
            padding: 20px;
            border-bottom: 2px solid #7cf7f1;
            background-color: #ec44ff; 
            display: flex;
            flex-direction: column;
            justify-content: flex-end; 
            max-height: calc(100% - 90px); 
            box-sizing: border-box;
        }.chat-input-container {
            display: flex;
            width: 100%;
            padding: 20px;
            background-color: #4f5b66;
            border-top: 2px solid #444;
            justify-content: space-between;
            align-items: center;
        }.chat-input-container input {
            flex: 1;
            padding: 15px;
            font-size: 16px;
            border: 2px solid #444;
            border-radius: 4px;
            margin-right: 10px;
            color: #FFFFFF;
            background-color: #586066; 
        }    
        .chat-input-container button {
            padding: 15px 20px;
            font-size: 16px;
            background-color: #3e8e41;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }.chat-input-container button:hover {
            background-color: #2f7a34; 
        }
         .message-container {
            display: flex;
            align-items: flex-start;
            margin: 10px 0;
        }.message-content {
            padding: 15px;
            border-radius: 4px;
            max-width: 70%;
        }  .user-message {
            background-color: #e83e8c;
            border-right: 4px solid #f7a1d2;
            color: #FFFFFF;
            font-weight: bold;
            align-self: flex-end;
        }.chatbot-message {
            background-color: #7ab55c; 
            border-left: 4px solid #66bb6a;
            color: #FFFFFF;
            align-self: flex-start;
        }  .sentiment-analysis {
            background-color: #f39c12; 
            border-left: 4px solid #f1c40f;
            color: #FFFFFF;
            font-style: italic;
            align-self: flex-start;
        }.user-avatar, .chatbot-avatar { width: 40px;
                height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        } .user-avatar {
            order: 2;
            margin-left: 10px;
        }  </style>
</head>
<body>
<div class="chat-container">
    <div class="chat-window" id="chat-window"></div>
    <div class="chat-input-container">
        <input type="text" id="user-input" placeholder="Type a message...">
        <button onclick="sendMessage()">Send</button>
        <button onclick="startVoiceRecognition()">🎤</button>
    </div>
</div><script>
    const pairs = [
        { pattern: /Hi|Hello|Hey/i, responses: ['Hello! How can I assist you today?', 'Hi there!'] },
        { pattern: /What is your name\?/i, responses: ['We are Niharika, Rohitha, Rahul, Shammu, Trishanth to help you analyze your sentiment according to your phrase.'] },
        { pattern: /How are you\?/i, responses: ['We are just analyzers of sentiment, but we are doing great, thank you!'] },
        { pattern: /quit/i, responses: ['Goodbye! Have a nice day!'] },
        { pattern: /.*/i, responses: ['ohhhh.....'] }
    ]; const shortcutWords = ["lol", "brb", "ttyl", "omg", "btw", "idk", "jk", "imo", "fyi", "asap", "np", "tbh", "rofl", "nvm", "smh", "irl", "afaik", "omw", "ftw", "gg", "wtf", "bbl", "atm", "idc", "dm"];
    function getResponse(input) {
        if (shortcutWords.includes(input.toLowerCase())) {
            const message = "Please check your phrase.";
            addMessage(`Chatbot: ${message}`, "chatbot-message");
            speak(message);
            return "";
        }        for (const pair of pairs) {
            if (pair.pattern.test(input)) {
                const responses = pair.responses;
                const selectedResponse = responses[Math.floor(Math.random() * responses.length)];
                speak(selectedResponse); 
                return selectedResponse;
            }
        }        const defaultMessage = "I didn't understand that.";
        return defaultMessage;
    }    function sendMessage() {
        const userInput = document.getElementById("user-input").value;
        if (userInput.toLowerCase() === 'quit') {
            const quitMessage = "Goodbye! Have a nice day!";
            addMessage(`Chatbot: ${quitMessage}`, "chatbot-message");
            document.getElementById("user-input").value = '';
            return;
        }

        addMessage(`You: ${userInput}`, "user-message");
        const sentiment = analyzeSentiment(userInput);
        const response = getResponse(userInput);
        if (response !== "") {
            addMessage(`Chatbot: ${response}`, "chatbot-message");
            addMessage(`Sentiment Analysis: ${sentiment.mood} ${sentiment.emoji}`, "sentiment-analysis");
            speak(`Sentiment Analysis: ${sentiment.mood} ${sentiment.emoji}`); 
        }        document.getElementById("user-input").value = '';
    }    function addMessage(message, className) {
        const chatWindow = document.getElementById("chat-window");
        const messageElement = document.createElement("div");
        messageElement.className = "message-container";
        const avatarElement = document.createElement("img");
        if (className === "user-message") {
            avatarElement.className = "user-avatar";
            avatarElement.src = "cc.jpg";
        } else {
            avatarElement.className = "chatbot-avatar";
            avatarElement.src = "cc1.jpg"; 
        }
        const messageContent = document.createElement("div");
        messageContent.className = `${className} message-content`;
        messageContent.textContent = message;
        messageElement.appendChild(avatarElement);
        messageElement.appendChild(messageContent);
        chatWindow.appendChild(messageElement);
        chatWindow.scrollTop = chatWindow.scrollHeight; 
    }
    function startVoiceRecognition() {
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        recognition.lang = 'en-US';
        recognition.start();
        recognition.onresult = function(event) {
            const transcript = event.results[0][0].transcript;
            document.getElementById("user-input").value = transcript;
            sendMessage();
        };
        recognition.onerror = function(event) {
            console.error('Speech recognition error:', event.error);
        };
    }    function speak(text) {
        const synthesis = window.speechSynthesis;
        const utterance = new SpeechSynthesisUtterance(text);
        synthesis.speak(utterance);
    }    function analyzeSentiment(text) {
        const moodKeywords = {
            hungry: ["hungry", "starving", "craving", "famished", "need food", "food", "eating", "pizza", "burger", "pasta", "sushi", "salad", "rice", "steak", "sandwich", "chicken", "bacon", "fries", "cake", "cookies", "icecream", "chips", "donut", "fruit", "vegetables", "apple", "banana", "orange", "watermelon", "grapes", "mango", "pineapple", "bread", "cheese", "hamburger"],
            jealous: ["jealous", "envious", "resentful", "comparison"],
            unhealthy: ["sick", "ill", "unwell", "weak", "tired"],
            curiosity: ["wondering", "curious", "want to know", "how", "why"],
            traveler: ["adventure", "backpacking", "beach", "budget travel", "city tour", "cruise", "day trip", "destination", "exploration", "flight", "food tourism", "getaway", "hiking", "holiday", "hotel", "journey", "nature", "packing", "road trip", "sightseeing", "tourism", "tourist", "train journey", "travel blog", "travel guide", "travel tips", "vacation", "weekend trip"],
            happy: ["happy", "joyful", "excited", "cheerful", "elated", "delighted", "content", "ecstatic", "blissful", "grateful"],
            sad: ["sad", "unhappy", "down", "depressed", "gloomy", "blue", "melancholy", "heartbroken", "mournful", "sorrowful"],
            angry: ["angry", "furious", "mad", "irritated", "rage", "annoyed", "enraged", "frustrated", "hostile", "irate"],
            surprised: ["surprised", "shocked", "amazed", "astonished", "stunned", "startled", "dumbfounded", "flabbergasted", "bewildered", "baffled"],
            anxious: ["anxious", "nervous", "worried", "uneasy", "restless", "fearful", "jittery", "tense", "on edge", "uneasy"],
            embarrassed: ["embarrassed", "ashamed", "self-conscious", "humiliated", "flushed", "mortified", "awkward", "chagrined", "abashed", "embarrassed"],
            confident: ["confident", "sure", "self-assured", "empowered", "secure", "proud", "positive", "optimistic", "assured", "bold"],
            overwhelmed: ["overwhelmed", "stressed", "overburdened", "exhausted", "burnt out", "overloaded", "drained", "frazzled", "tired", "weighed down"],
            nostalgic: ["nostalgic", "sentimental", "homesick", "reminiscing", "yearning", "longing", "wistful", "reflective", "melancholy", "regretful"],
            bored: ["bored", "uninterested", "apathetic", "listless", "disinterested", "dull", "unmotivated", "restless", "unengaged", "indifferent"],
            grateful: ["grateful", "thankful", "appreciative", "blessed", "thankful", "indebted", "obliged", "pleased", "content", "satisfied"],
            hopeful: ["hopeful", "optimistic", "faithful", "encouraged", "positive", "looking forward", "believing", "expectant", "dreaming", "anticipating"],
            loved: ["loved", "adored", "cared for", "cherished", "valued", "special", "appreciated", "wanted", "treasured", "supported"],
            insecure: ["insecure", "self-doubt", "unsure", "uncertain", "vulnerable", "fragile", "anxious", "unsteady", "unconfident", "uneasy"],
            inspired: ["inspired", "motivated", "encouraged", "energized", "driven", "stimulated", "uplifted", "empowered", "innovative", "creative"],
         
        };for (const [mood, keywords] of Object.entries(moodKeywords)) {
            for (const keyword of keywords) {
                if (text.toLowerCase().includes(keyword)) {
                    return { mood, emoji: getEmoji(mood) };
                }
            }
        }  return { mood: "neutral", emoji: "😐" };
    } function getEmoji(mood) {
        const moodEmojis = {
            hungry: "🍔", jealous: "😒",  unhealthy: "🤒", curiosity: "🤔", traveler: "🌍",happy: "😊",sad: "😔",  angry: "😡",surprised: "😲", anxious: "😟", embarrassed: "😳", confident: "💪", overwhelmed: "😩", nostalgic: "😌", bored: "😐",grateful: "🙏", hopeful: "🌟", loved: "❤️", insecure: "😕", inspired: "✨"      };
        return moodEmojis[mood] || "😐";
    } </script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap"></script>
</body>
</html>




